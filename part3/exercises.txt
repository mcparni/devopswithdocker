3.1:
Repository with the deployment pipeline config:
https://github.com/mcparni/whatip

3.2:
Not yet done

3.3:

frontend:
!Note https://github.com/docker-hy/material-applications/tree/main/example-frontend needs to be in same folde as this Dockerfile:

FROM ubuntu:18.04
WORKDIR /usr/app
EXPOSE 5000
COPY . .
RUN apt-get update &&  apt-get -y install curl
RUN curl -sL https://deb.nodesource.com/setup_14.x | bash
RUN apt install -y nodejs
RUN useradd -m appuser
RUN chown -R appuser:appuser /usr/app
RUN chown -R appuser:appuser /usr/lib/node_modules
USER appuser
RUN cd /usr/app
RUN npm install
RUN npm run build
USER root
RUN npm install -g serve
USER appuser
RUN cd /usr/app
CMD ["serve","-s","-l","5000","build"]

backend:
!Note https://github.com/docker-hy/material-applications/tree/main/example-backend needs to be in same folde as this Dockerfile:

FROM ubuntu:18.04
WORKDIR /usr/app
EXPOSE 8080
COPY . .
ENV PORT=8080
ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/local/go/bin
ENV REQUEST_ORIGIN=http://localhost:5000
RUN apt-get update &&  apt-get -y install curl
RUN curl https://dl.google.com/go/go1.16.4.linux-amd64.tar.gz -o go1.16.4.linux-amd64.tar.gz
RUN rm -rf /usr/local/go && tar -C /usr/local -xzf go1.16.4.linux-amd64.tar.gz
RUN useradd -m appuser
RUN chown -R appuser:appuser /usr/app
USER appuser
RUN cd /usr/app
RUN go build
CMD ["./server"]


3.4:

Original image sizes:
Frontend 	517MB
Backend		906MB

New Dockerfiles:
Frontend Dockerfile, (image size 456MB):
FROM ubuntu:18.04
WORKDIR /usr/app
EXPOSE 5000
COPY . .
RUN apt-get update && apt-get -y install curl && curl -sL https://deb.nodesource.com/setup_14.x | bash && \
        apt install -y nodejs && useradd -m appuser && npm install -g serve && \
        chown -R appuser:appuser /usr/app && chown -R appuser:appuser /usr/lib/node_modules && \
        apt-get purge -y --auto-remove curl && \ 
        rm -rf /var/lib/apt/lists/*
USER appuser
RUN cd /usr/app && npm install &&  npm run build
CMD ["serve","-s","-l","5000","build"]


Backend Dockerfile, (image size 602MB):

FROM ubuntu:18.04
WORKDIR /usr/app
EXPOSE 8080
COPY . .
ENV PORT=8080
ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/local/go/bin
ENV REQUEST_ORIGIN=http://localhost:5000
RUN apt-get update &&  apt-get -y install curl && curl https://dl.google.com/go/go1.16.4.linux-amd64.tar.gz -o go1.16.4.linux-amd64.tar.gz && \
        rm -rf /usr/local/go && tar -C /usr/local -xzf go1.16.4.linux-amd64.tar.gz && rm -rf /usr/app/go1.16.4.linux-amd64.tar.gz && \
        useradd -m appuser && \
        apt-get purge -y --auto-remove curl && rm -rf /var/lib/apt/lists/* && \
        cd /usr/app && go build && chown -R appuser:appuser /usr/app
USER appuser
CMD ["./server"]

3.5:

Original image sizes:
Frontend 	456MB
Backend		602MB

frontend Dockerfile:

FROM node:14-alpine3.12
WORKDIR /usr/app
EXPOSE 5000
COPY . .
RUN cd /usr/app && npm install &&  npm run build && npm install -g serve && \
adduser -D appuser && chown -R appuser:appuser /usr/app
USER appuser
CMD ["serve","-s","-l","5000","build"]

New frontent image size: 345MB

backend Dockerfile:

FROM golang:1.17.3-alpine3.13
WORKDIR /usr/app
EXPOSE 8080
COPY . .
ENV PORT=8080
ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/local/go/bin
ENV REQUEST_ORIGIN=http://localhost:5000
RUN cd /usr/app && go build && adduser -D appuser && chown -R appuser:appuser /usr/app
USER appuser
CMD ["./server"]


New backend image size: 467MB





